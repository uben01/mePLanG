package mePLanG.typesystem;

/*Generated by MPS */

import jetbrains.mps.lang.typesystem.runtime.ComparisonRule_Runtime;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.typesystem.runtime.IsApplicable2Status;
import jetbrains.mps.lang.typesystem.runtime.IsApplicableStatus;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class compare_PL_Integer_to_Char_ComparisonRule extends ComparisonRule_Runtime {
  public compare_PL_Integer_to_Char_ComparisonRule() {
  }
  public boolean areComparable(SNode node1, SNode node2, IsApplicable2Status status) {
    return true;
  }
  public boolean isWeak() {
    return true;
  }
  public IsApplicableStatus isApplicableFirst(SNode node) {
    return new IsApplicableStatus(node.getConcept().isSubConceptOf(getApplicableConcept1()), null);
  }
  public IsApplicableStatus isApplicableSecond(SNode node) {
    return new IsApplicableStatus(node.getConcept().isSubConceptOf(getApplicableConcept2()), null);
  }

  public SAbstractConcept getApplicableConcept1() {
    return CONCEPTS.PL_IntegerType$hr;
  }
  public SAbstractConcept getApplicableConcept2() {
    return CONCEPTS.PL_CharacterType$hU;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept PL_IntegerType$hr = MetaAdapterFactory.getConcept(0x4516c44b8ee54276L, 0xbb7f7414c1a20bd0L, 0x33d31477eed3b414L, "mePLanG.structure.PL_IntegerType");
    /*package*/ static final SConcept PL_CharacterType$hU = MetaAdapterFactory.getConcept(0x4516c44b8ee54276L, 0xbb7f7414c1a20bd0L, 0x33d31477eed3b415L, "mePLanG.structure.PL_CharacterType");
  }
}
